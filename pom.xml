<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.3</version>
        <relativePath/>
    </parent>

    <groupId>com.soft</groupId>
    <artifactId>suphowe-tools</artifactId>
    <version>1.0.0</version>

    <packaging>pom</packaging>

    <description>suphowe-tools</description>
    <modules>
        <!-- netty -->
        <module>suphowe-netty</module>
        <!-- 定时任务 -->
        <module>suphowe-task</module>
        <!-- 通用方法库 -->
        <module>suphowe-general-method</module>
        <!-- 自动生成代码 -->
        <module>suphowe-code-autocreate</module>
        <!-- mq 集成 -->
        <module>suphowe-mq</module>
        <!-- 缓存 -->
        <module>suphowe-cache</module>
        <!-- Admin 管控台 -->
        <module>suphowe-control-admin</module>
        <!-- ureport2 报表实现 -->
        <module>suphowe-report-ureport2</module>
        <!-- activiti 流程引擎 -->
        <module>suphowe-activiti</module>
        <!-- camunda 流程引擎  -->
        <module>suphowe-camunda</module>
        <!-- actuator springboot 状态监控 -->
        <module>suphowe-actuator</module>
        <!-- 邮件操作 -->
        <module>suphowe-email</module>
        <!-- api 访问限流 -->
        <module>suphowe-ratelimit</module>
        <!-- rbac 权限验证 -->
        <module>suphowe-rbac</module>
        <!-- docker -->
        <module>suphowe-docker</module>
        <!-- hadoop -->
        <module>suphowe-hadoop</module>
        <!-- log 日志处理 -->
        <module>suphowe-log</module>
        <!-- web 服务公共处理 -->
        <module>suphowe-web</module>

    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <context.support.version>5.3.9</context.support.version>
        <hutool.version>5.7.9</hutool.version>
        <commons.io.version>2.4</commons.io.version>
        <commons.codec.version>1.10</commons.codec.version>
        <commons.lang3.version>3.12.0</commons.lang3.version>
        <lombok.version>1.18.20</lombok.version>
        <springfox.starter.version>3.0.0</springfox.starter.version>
        <springfox.swagger.version>3.0.0</springfox.swagger.version>
        <swagger.bootstrap.version>1.9.6</swagger.bootstrap.version>
        <guava.version>30.1-jre</guava.version>
        <quartz.version>2.3.2</quartz.version>
        <quartz.jobs.version>2.3.2</quartz.jobs.version>
        <google.gson.version>2.8.6</google.gson.version>
        <alibaba.fastjson.version>1.2.78</alibaba.fastjson.version>
        <javax.el.version>3.0.0</javax.el.version>
        <spring-jdbc.version>5.3.10</spring-jdbc.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${context.support.version}</version>
        </dependency>

        <!-- gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${google.gson.version}</version>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${alibaba.fastjson.version}</version>
        </dependency>

        <!-- commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons.codec.version}</version>
        </dependency>
        <!-- commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons.lang3.version}</version>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--swagger2-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
            <version>${springfox.starter.version}</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox.swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>swagger-bootstrap-ui</artifactId>
            <version>${swagger.bootstrap.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <!-- quartz -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz-jobs</artifactId>
            <version>${quartz.jobs.version}</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.el</artifactId>
            <version>${javax.el.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring-jdbc.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.shalousun</groupId>
                <artifactId>smart-doc-maven-plugin</artifactId>
                <version>1.2.0</version>
                <configuration>
                    <!--指定生成文档的使用的配置文件,配置文件放在自己的项目中-->
                    <configFile>./resources/smart-doc.json</configFile>
                    <!--指定项目名称-->
                    <projectName>suphowe-tools</projectName>
                    <!--smart-doc实现自动分析依赖树加载第三方依赖的源码，如果一些框架依赖库加载不到导致报错，这时请使用excludes排除掉-->
                    <excludes>
                        <!--格式为：groupId:artifactId;参考如下-->
                        <!--1.0.7版本开始你还可以用正则匹配排除,如：poi.* -->
                        <exclude>com.alibaba:fastjson</exclude>
                    </excludes>
                    <!--自1.0.8版本开始，插件提供includes支持,配置了includes后插件会按照用户配置加载而不是自动加载，因此使用时需要注意-->
                    <!--smart-doc能自动分析依赖树加载所有依赖源码，原则上会影响文档构建效率，因此你可以使用includes来让插件加载你配置的组件-->
                    <includes>
                        <!--格式为：groupId:artifactId;参考如下-->
                        <include>com.alibaba:fastjson</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <!--如果不需要在执行编译时启动smart-doc，则将phase注释掉-->
                        <phase>compile</phase>
                        <goals>
                            <goal>html</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
